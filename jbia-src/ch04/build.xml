<?xml version="1.0"?>
<!-- 
 *******************************************************************************
 *  Copyright 2008, Javid Jamae and Peter Johnson
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not
 *  use this file except in compliance with the License. You may obtain a copy
 *  of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *  
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 *  License for the specific language governing permissions and limitations
 *  under the License.
 *******************************************************************************
-->
<!-- ===========================================================================

                               JBoss in Action
                        Ch 4 - Securing Applications

  This Ant build script is used to build and deploy various examples
  from chapter 4.

============================================================================ -->
<project name="security" default="help" basedir=".">

	<!-- Specifies the location of the global include and properties files -->
	<property name="dir.ch00" location="../ch00" />

	<!-- Get properties related to the user's environment. -->
	<property file="${dir.ch00}/build.properties" />

	<!-- Import various properties and targets -->
	<import file="${dir.ch00}/build-include.xml" />

	<!-- Override help target from include script to avoid confusion. -->
	<target name="help">
		<echo>usage: ant NN</echo>
		<echo>where NN is 01 through 03</echo>
		<echo>Enter "ant -p" for full target list.</echo>
	</target>

	<!--
    ============================================================================
      The major targets build everything needed for each example in the chapter.
      Note that only one example can be built at a time because each target
      removes the "target" directory.
    ============================================================================
  -->
	<target description="(4.3.1) Builds and packages the Hello World web application with security enabled via the UsersRolesLoginModule (file based)"
	        name="01"
	        depends="init-01, g-init, g-reset-jboss, 01-package, g-deploy-ear" />
	<target description="(4.3.2) Builds and packages the Hello World web application with security enabled via the DatabaseLoginModule"
	        name="02"
	        depends="init-02, g-init, g-reset-jboss, 02-package, g-deploy-ear, g-reset-db" />
	<target description="(4.3.4) Builds and packages the Hello World web application with security enabled via the IdentityLoginModule"
	        name="03"
	        depends="init-03, g-init, g-reset-jboss, 03-package, g-deploy-ear" />
	<target description="(4.3.5) Demos multiple login modules"
	        name="04"
	        depends="init-04, g-init, g-reset-jboss, 04-package, g-deploy-ear" />
	<target description="(4.3.5) Demos password stacking"
	        name="05"
	        depends="init-05, g-init, g-reset-jboss, 05-package, g-deploy-ear" />


	<!-- =========================================================================
    This set of variations of the major targets only compile and package the
    clients, EJBs or POJOs. Initialization of the application server and
    database, or deploying the EJB or POJO, is left up to you.
  -->
	<target name="01-package"
	        depends="init-01, g-init, g-clean, g-jboss-config, resource-jar, g-war, g-ear" />
	<target name="02-package"
	        depends="init-02, g-init, g-clean, g-jboss-config, resource-jar, g-war, g-ear" />
	<target name="03-package"
	        depends="init-03, g-init, g-clean, g-jboss-config, resource-jar, g-war, g-ear" />
	<target name="04-package"
	        depends="init-04, g-init, g-clean, g-jboss-config, resource-jar, g-war, g-ear" />
	<target name="05-package"
	        depends="init-05, g-init, g-clean, g-jboss-config, resource-jar, g-war, g-ear" />


	<!--
    ============================================================================
      The following targets set properties that are specific to each example.
      This must be done before the global initialization.
    ============================================================================
  -->
	<target name="init-01">
		<property name="alt.target" value="01" />
		<property name="dir.resources"
		          value="src/alt/${alt.target}/resources" />
	</target>
	<target name="init-02">
		<property name="alt.target" value="02" />
		<property name="need.preprocess" value="true" />
		<property name="dir.resources"
		          value="src/alt/${alt.target}/resources" />
	</target>
	<target name="init-03">
		<property name="alt.target" value="03" />
		<property name="dir.resources"
		          value="src/alt/${alt.target}/resources" />
	</target>
	<target name="init-04">
		<property name="alt.target" value="04" />
		<property name="dir.resources"
		          value="src/alt/${alt.target}/resources" />
	</target>
	<target name="init-05">
		<property name="alt.target" value="05" />
		<property name="dir.resources"
		          value="src/alt/${alt.target}/resources" />
	</target>


	<!--
	    ============================================================================
	      The following targets do the extra work necessary to compile, package and
	      deploy the resource JAR archive that contains the dynamic login configuration info.
	    ============================================================================
	  -->

	<!-- Packages the Hibernate archive. -->
	<target name="resource-jar">
		<antcall target="g-jar">
			<param name="jar.path" value="${resourcejar.path}" />
			<param name="include.classes"
			       value="**/dynamic-login-config.xml,**/my*.properties" />
		</antcall>
	</target>
	<!-- 
    ============================================================================
      The following targets do the extra work necessary to initialize the 
      properties used during the build.
    ============================================================================
  -->

	<!-- Set these before the global properties are set. -->
	<target name="init-pre">
		<property name="book.chapter" value="Ch 04 - Securing Applications" />
		<property name="include.classes" value="**/*.class" />
		<property name="app.name" value="jbiasecurity" />
	</target>

	<!-- Set these after the global properties are set. -->
	<target name="init-post">

		<!--
      Database-related properties whose values are the same regardless of which
      database is being used:
    -->
		<property name="security.realm" value="simple-security-domain" />

		<!--
        Set properties related to alternative directories used by some of the
        examples.
    -->
		<property name="dir.alt.db" location="${dir.alt}/db" />

		<!-- Specify optional processing required -->
		
		
		<property name="resourcejar.name" value="dynamic-login.jar" />
		<property name="resourcejar.path" location="${dir.dist}/${resourcejar.name}" />
	</target>


	<!--
    ============================================================================
      The following targets do the extra work necessary to initialize the
      database for use with the database login modules.
    ============================================================================
  -->
	<target name="db-post" depends="db-roles" />

	<!-- Populate the database with users and roles -->
	<target name="db-roles" if="mysql.or.postgresql">
		<sql driver="${db.driver}"
		     url="${db.url.base}${db.database}"
		     userid="${db.user}"
		     password="${db.password}"
		     onerror="continue"
		     src="${dir.alt.db}/${mysql.or.postgresql}-populate.sql"
		     print="true"
		     autocommit="true">
			<classpath location="${database.jar}" />
		</sql>
	</target>


	<!-- 
    ============================================================================
      These targets clean up the mess we made.
    ============================================================================
  -->

	<target description="Removes all generated files."
	        name="clean"
	        depends="g-clean" />
	<target description="Removes all generated files and the JBoss AS configuration."
	        name="clean-all"
	        depends="g-clean-all" />

</project>
