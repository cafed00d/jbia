################################################################################
#  Copyright 2009, Javid Jamae and Peter Johnson
# 
#  Licensed under the Apache License, Version 2.0 (the "License"); you may not
#  use this file except in compliance with the License. You may obtain a copy
#  of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
#  
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
################################################################################
#
# Variation: 02 - messaging clients and MDB w. annotations
#
# This file contains the properties used by the pre-processor to modify the
# Java source files before they are compiled. See the "preprocess" task in the
# build.xml file for further details. 

#-------------------------------------------------------------------------------
# For this variation, the WireTap message-driven EJB is defined using
# annotations.

# The extra import statements required for the annotation:
WireTap.import=import javax.ejb.ActivationConfigProperty;\n\
import javax.ejb.MessageDriven;

# The annotation applied to the class:
WireTap.annotation=@MessageDriven(activationConfig = {\n\
    \ \ \ \ @ActivationConfigProperty(propertyName = "destinationType", propertyValue = "javax.jms.Topic"),\n\
    \ \ \ \ @ActivationConfigProperty(propertyName = "destination", propertyValue = "topic/testDurableTopic"),\n\
    \ \ \ \ @ActivationConfigProperty(propertyName = "subscriptionDurability", propertyValue = "Durable"),\n\
    \ \ \ \ @ActivationConfigProperty(propertyName = "messageSelector", propertyValue = "SpudsCustomer = 'Natalie'") })

#-------------------------------------------------------------------------------
# For this variation, messaging clients use destinations provided by the
# messaging service, and do not log in.

topic.notify=testTopic
topic.request=testDurableTopic
topic.durable=false
login.store=
login.customer=
login.module=


#-------------------------------------------------------------------------------
# For this variation, messaging clients do not use SSL.

ssl.keystore.linux=
ssl.keystore.win=
