<?xml version="1.0"?>
<!-- 
 *  Copyright 2007, Javid Jamae and Peter Johnson
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not
 *  use this file except in compliance with the License. You may obtain a copy
 *  of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *  
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 *  License for the specific language governing permissions and limitations
 *  under the License.
-->
<!-- ===========================================================================

                               JBoss in Action
                        Ch 12 & 13 - JBoss Clustering

  This Ant build script is used to build and deploy the example image portlet
  used in the JBoss Portal chapters.

============================================================================ -->
<project name="clustering" basedir=".">

	<!-- Specifies the location of the global include and properties files -->
	<property name="dir.ch00" location="../ch00" />

	<!-- Get properties related to the user's environment. -->
	<property file="${dir.ch00}/build.properties" />

	<!-- Import various properties and targets -->
	<import file="${dir.ch00}/build-include.xml" />

	<!-- Override help target from include script to avoid confusion. -->
	<target name="help">
		<echo>usage: ant NN</echo>
		<echo>where NN is 01 through 07</echo>
		<echo>Enter "ant -p" for full target list.</echo>
	</target>

	<!--
    ============================================================================
      The major targets build everything needed for each example in the chapter.
      Note that only one example can be built at a time because almost all
      examples use the same base code and typically just change configuration.
      In addition, each major target rebuilds the application server, and
      possibly initializes the database, to guarantee correct operation of the
      example. You should ensure that the application server is not running
      before invoking any of these targets.
    ============================================================================
    -->
	<target description="(12.?) Creates a two node cluster and deploys an EJB load balancing example to it" name="01" depends="init-01, g-init, g-reset-jboss, 01-package, g-deploy-jar" />

	<target description="(12.?) " name="02" depends="init-02, g-init, g-reset-jboss, jboss-binding" />

	<!-- 
	=========================================================================
    This set of variations of the major targets only compile and package the
    clients, EJBs or POJOs. Initialization of the application server and
    database, or deploying the EJB or POJO, is left up to you.
    ============================================================================
    -->
	<target name="01-package" depends="init-01, g-init, g-clean, g-jboss-config, alt-01, g-jar" />


	<!--
	    ============================================================================
	      The following targets set properties that are specific to each example.
	      This must be done before the global initialization.
	    ============================================================================
	  -->
	<target name="init-01">
		<property name="alt.target" value="01" />
		<property name="need.second.server" value="true" />
		<property name="jboss.server.config" value="all" />
		<property name="dir.main" location="src/ejbloadbalancing" />
	</target>
	<target name="init-02">
		<property name="alt.target" value="02" />
		<property name="need.second.server" value="true" />
		<property name="jboss.server.config" value="all" />
	</target>

	<!-- 
    ============================================================================
      The following targets do the extra work necessary to initialize the 
      properties used during the build.
    ============================================================================
    -->

	<!-- Set these before the global properties are set. -->
	<target name="init-pre">
		<property name="jboss.server" value="node1" />
		<property name="book.chapter" value="Ch 12,13 - JBoss Clustering" />
	</target>

	<!-- Set these after the global properties are set. -->
	<target name="init-post">
		<property name="jboss.server.2" value="node2" />
		<property name="dir.alt.jboss" location="${dir.alt}/jboss" />
	</target>


	<!--
	    ============================================================================
	      The following targets apply the configurations and variations, as defined
	      by each example.
	    ============================================================================
	  -->
	<target name="alt-01">
	</target>

	<!-- Copy the create a unique node-id in the messaging-service.xml to avoid conflict -->
	<target name="update-messaging-node-id">
		<copy todir="${dir.config}">
			<fileset dir="${dir.alt.jboss}">
				<exclude name="**/jboss-service-suffix.xml" />
			</fileset>
			<filterchain>
				<tokenfilter>
					<replaceregex pattern="jbossMessagingNodeId" replace="${server.node}" />
				</tokenfilter>
			</filterchain>
		</copy>
		<copy todir="${dir.server}" overwrite="true">
			<fileset dir="${dir.config}" />
		</copy>
	</target>


	<!--
	============================================================================
	  The following targets do the extra work necessary to initialize the
	  application server.
	 ============================================================================
	-->

	<!-- Do this after the application server has been initialized. -->
	<target name="jboss-post" depends="jboss-second-server">
	</target>

	<!-- Create a second server configuration, if needed. -->
	<target name="jboss-second-server" if="need.second.server">
		<!-- Generate a second server configuration -->
		<antcall target="g-jboss-server">
			<param name="dir.server" value="${dir.server.base}/${jboss.server.2}" />
		</antcall>
		<antcall target="update-messaging-node-id">
			<param name="server.node" value="2" />
			<param name="dir.server" value="${dir.server.base}/${jboss.server.2}" />
		</antcall>
		<antcall target="g-deploy-jar">
			<param name="dir.deploy" value="${dir.server.base}/${jboss.server.2}/deploy" />
		</antcall>
	</target>

	<!-- Configure the binding manager service -->
	<target name="jboss-binding" depends="g-clean">
		<copy tofile="${dir.server.base}/portBindings.xml" file="${home.jboss}/docs/examples/binding-manager/sample-bindings.xml" />
		<antcall target="append-service-binding">
			<param name="param.jboss.server" value="${jboss.server}" />
			<param name="jbia.port.binding" value="ports-default" />
		</antcall>
		<antcall target="append-service-binding">
			<param name="param.jboss.server" value="${jboss.server.2}" />
			<param name="jbia.port.binding" value="ports-01" />
		</antcall>
	</target>


	<!--
	    Appends the Service Binding Manager MBean to the services configuration file.
	-->
	<target name="append-service-binding">
		<loadfile property="src.jboss.service" srcfile="${dir.alt.jboss}/jboss-service-suffix.xml">
			<filterchain>
				<!-- Skip copyright and opening tag -->
				<headfilter lines="-1" skip="18" />
			</filterchain>
		</loadfile>
		<!-- We will do this twice, so put each file in a unique location -->
		<copy file="${dir.server.base}/${param.jboss.server}/conf/jboss-service.xml" todir="${dir.output}/alt/${param.jboss.server}/jboss/conf">
			<filterchain>
				<tokenfilter>
					<replaceregex pattern="(\x3c/server\x3e)" replace="${src.jboss.service}" />
				</tokenfilter>
			</filterchain>
		</copy>
		<!-- Set the ServerName property during this copy operation -->
		<copy todir="${dir.server.base}/${param.jboss.server}/conf" file="${dir.output}/alt/${param.jboss.server}/jboss/conf/jboss-service.xml" overwrite="true" verbose="true">
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>
	</target>


	<!--
    ============================================================================
      The following targets run the client Java applications for the various
      examples
    ============================================================================
    -->
	<target name="01-client" depends="init-01, g-init">
		<path id="classpath.runtime">
			<fileset dir="${home.jboss}/client" includes="**/*" />
			<fileset dir="${home.jboss}/lib" includes="**/*.jar" />
			<fileset dir="${dir.server}/lib" includes="**/*.jar" />
			<fileset dir="${dir.server}/deployers/ejb3.deployer" includes="**/*.jar" />
			<fileset dir="${dir.dist}" includes="${jar.name}" />
		</path>
		<java classpathref="classpath.runtime" classname="com.manning.jbia.Client" />
	</target>

	<!-- 
    ============================================================================
      These targets clean up the mess we made.
    ============================================================================
    -->

	<target description="Removes all generated files." name="clean" depends="g-clean" />
	<target description="Removes all generated files and the JBoss AS configuration." name="clean-all" depends="g-clean-all" />

</project>
