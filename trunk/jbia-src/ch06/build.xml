<?xml version="1.0"?>
<!-- 
 *******************************************************************************
 *  Copyright 2007, Javid Jamae and Peter Johnson
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not
 *  use this file except in compliance with the License. You may obtain a copy
 *  of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *  
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 *  License for the specific language governing permissions and limitations
 *  under the License.
 *******************************************************************************
-->
<!-- ===========================================================================

                               JBoss in Action
                        Ch 6 - Securing Web Applications

  This Ant build script is used to build and deploy various examples
  from chapter 6.

============================================================================ -->
<project name="websecurity" basedir=".">

	<!-- Specifies the location of the global include and properties files -->
	<property name="dir.ch00" location="../ch00" />

	<!-- Get properties related to the user's environment. -->
	<property file="${dir.ch00}/build.properties" />

	<!-- Import various properties and targets -->
	<import file="${dir.ch00}/build-include.xml" />
	<import file="${dir.ch00}/ssl-include.xml" />

	<!-- Override help target from include script to avoid confusion. -->
	<target name="help">
		<echo>usage: ant NN</echo>
		<echo>where NN is 01 through 02</echo>
		<echo>Enter "ant -p" for full target list.</echo>
	</target>

	<!--
    ============================================================================
      The major targets build everything needed for each example in the chapter.
      Note that only one example can be built at a time because each target
      removes the "target" directory.
    ============================================================================
    -->
	<target description="(6.2.2) Builds and packages the Hello World web application with BASIC authentication security enabled"
	        name="01"
	        depends="init-01, g-init, g-clean, g-reset-jboss, 01-package, g-deploy-ear" />
	<target description="(6.2.3) Builds and packages the Hello World web application with FORM authentication security enabled"
	        name="02"
	        depends="init-02, g-init, g-clean, g-reset-jboss, 02-package, g-deploy-ear" />
	<target description="(6.2.4) Builds and packages the Hello World web application with DIGEST authentication security enabled"
	        name="03"
	        depends="init-03, g-init, g-clean, g-reset-jboss, 03-package, g-deploy-ear" />
	<target description="(6.4.1) Builds and packages the Hello World web application and a server certificate which allows the application to be accessed over HTTPS"
	        name="04"
	        depends="init-04, g-init, g-clean, g-reset-jboss, 04-package, ssl, s-deploy-server-certificates, g-deploy-war" />
	<target description="(6.4.2) Builds and packages the Hello World web application and a server certificate which allows the application to be accessed over HTTPS. Also enabled a transport guarantee."
	        name="05"
	        depends="init-05, g-init, g-clean, g-reset-jboss, 05-package, ssl, s-deploy-server-certificates, g-deploy-war" />
	<target description="(6.4.3 &amp; 6.4.4) Builds and packages the Hello World web application that runs on a client and server that mutually authenticate."
	        name="06"
	        depends="init-06, g-init, g-clean, g-reset-jboss, 06-package, ssl, s-create-server-truststore, s-convert-client-x509-to-pkcs12, s-deploy-server-certificates,  g-deploy-war" />
	<target description="(6.5) Builds and packages the Hello World web application that runs using client certificate authentication."
	        name="07"
	        depends="init-07, g-init, g-clean, g-reset-jboss, 07-package, ssl, s-create-server-truststore, s-convert-client-x509-to-pkcs12, s-deploy-server-certificates,  g-deploy-ear" />

	<!-- 
	=========================================================================
    This set of variations of the major targets only compile and package the
    clients, EJBs or POJOs. Initialization of the application server and
    database, or deploying the EJB or POJO, is left up to you.
    =========================================================================
    -->
	<target name="01-package"
	        depends="init-01, g-init, g-clean, g-jboss-config, alt-01, resource-jar, g-war, g-ear" />
	<target name="02-package"
	        depends="init-02, g-init, g-clean, g-jboss-config, alt-02, resource-jar, g-war, g-ear" />
	<target name="03-package"
	        depends="init-03, g-init, g-clean, g-jboss-config, alt-03, resource-jar, g-war, g-ear" />
	<target name="04-package"
	        depends="init-04, g-init, g-clean, g-jboss-config, alt-04, g-war" />
	<target name="05-package"
	        depends="init-05, g-init, g-clean, g-jboss-config, alt-05, g-war" />
	<target name="06-package"
	        depends="init-06, g-init, g-clean, g-jboss-config, alt-06, g-war" />
	<target name="07-package"
	        depends="init-07, g-init, g-clean, g-jboss-config, alt-07, resource-jar, g-war, g-ear" />


	<!--
    ============================================================================
      The following targets set properties that are specific to each example.
      This must be done before the global initialization.
    ============================================================================
    -->
	<target name="init-01">
		<property name="alt.target" value="01" />
		<property name="app.name" value="jbiawebsecurity" />
		<property name="dir.resources"
		          value="src/alt/${alt.target}/resources" />
	</target>
	<target name="init-02">
		<property name="alt.target" value="02" />
		<property name="app.name" value="jbiawebsecurity" />
		<property name="dir.resources"
		          value="src/alt/${alt.target}/resources" />
	</target>
	<target name="init-03">
		<property name="alt.target" value="03" />
		<property name="app.name" value="jbiawebsecurity" />
		<property name="dir.resources"
		          value="src/alt/${alt.target}/resources" />
	</target>
	<target name="init-04">
		<property name="alt.target" value="04" />
		<property name="app.name" value="https" />
		<!-- <property name="need.config" value="false" /> -->
		<!-- I can't figure out why the line above doesn't work, so I do this... -->
		<property name="dir.config.src" value="src/alt/${alt.target}/jboss" />
	</target>
	<target name="init-05">
		<property name="alt.target" value="05" />
		<property name="app.name" value="transportguarantee" />
		<!-- <property name="need.config" value="false" /> -->
		<!-- I can't figure out why the line above doesn't work, so I do this... -->
		<property name="dir.config.src" value="src/alt/${alt.target}/jboss" />
	</target>
	<target name="init-06">
		<property name="alt.target" value="06" />
		<property name="app.name" value="mutualauthentication" />
		<property name="dir.resources"
		          value="src/alt/${alt.target}/resources" />
		<!-- <property name="need.config" value="false" /> -->
		<!-- I can't figure out why the line above doesn't work, so I do this... -->
		<property name="dir.config.src" value="src/alt/${alt.target}/jboss" />
	</target>
	<target name="init-07">
		<property name="alt.target" value="07" />
		<property name="app.name" value="jbiawebsecurity" />
		<property name="dir.resources"
		          value="src/alt/${alt.target}/resources" />
		<property name="dir.config.src" value="src/alt/${alt.target}/jboss" />
	</target>


	<!--
    ============================================================================
      The following targets apply the configurations and variations, as defined
      by each example.
    ============================================================================
    -->

	<target name="alt-01">
		<copy todir="${dir.output}/${war.name}">
			<fileset dir="${dir.alt}/${alt.target}" includes="**/*.xml" />
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>
	</target>
	<target name="alt-02">
		<copy todir="${dir.output}/${war.name}">
			<fileset dir="${dir.alt}/${alt.target}" includes="**/*.xml" />
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>
	</target>
	<target name="alt-03">
		<copy todir="${dir.output}/${war.name}">
			<fileset dir="${dir.alt}/${alt.target}" includes="**/*.xml" />
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>
	</target>
	<target name="alt-04">
		<copy todir="${dir.output}/${war.name}">
			<fileset dir="${dir.alt}/${alt.target}" includes="**/web.xml" />
		</copy>
	</target>
	<target name="alt-05">
		<copy todir="${dir.output}/${war.name}">
			<fileset dir="${dir.alt}/${alt.target}" includes="**/web.xml" />
		</copy>
	</target>
	<target name="alt-06">
		<copy todir="${dir.output}/${war.name}">
			<fileset dir="${dir.alt}/${alt.target}" includes="**/web.xml" />
		</copy>
	</target>
	<target name="alt-07">
		<copy todir="${dir.output}/${war.name}">
			<fileset dir="${dir.alt}/${alt.target}"
			         includes="**/*.xml"
			         excludes="jboss/**, server.xml" />
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>
	</target>


	<!-- 
    ============================================================================
      The following targets do the extra work necessary to initialize the 
      properties used during the build.
    ============================================================================
    -->

	<!-- Set these before the global properties are set. -->
	<target name="init-pre">
		<property name="jboss.server" value="websecurity" />
		<property name="include.classes" value="**/*.class" />
		<property name="book.chapter"
		          value="Ch 06 - Securing Web Applications" />
	</target>

	<!-- Set these after the global properties are set. -->
	<target name="init-post" depends="s-init">
		<!-- Specify optional processing required. -->
		<property name="need.preprocess" value="true" />

		<!-- Set properties related to the JBoss AS. -->
		<property name="dir.jbossweb"
		          location="${dir.server}/deploy/jbossweb.sar" />

		<property name="security.realm" value="simple-security-domain" />
		<property name="resourcejar.name" value="dynamic-login.jar" />
		<property name="resourcejar.path" location="${dir.dist}/${resourcejar.name}" />
	</target>


	<!-- 
	===================================================================== 
	Targets that set up server and client for SSL. 
	===================================================================== 
	-->
	<target name="ssl"
	        depends="s-init, ssl-serverxml, s-create-server-certificate" />

	<!-- Appends the SSL-related information to the JBoss Web server.xml config file. -->
	<target name="ssl-serverxml">
		<loadfile property="src.serverxml"
		          srcfile="${dir.alt}/${alt.target}/server.xml">
			<filterchain>
				<headfilter lines="-1" skip="19" />
			</filterchain>
			<filterchain>
				<expandproperties />
			</filterchain>
		</loadfile>
		<copy file="${dir.jbossweb}/server.xml" todir="${dir.config}">
			<filterchain>
				<tokenfilter>
					<replaceregex pattern="(\x3c/Service\x3e)"
					              replace="${src.serverxml}" />
				</tokenfilter>
			</filterchain>
			<filterchain>
				<replacestring from="SubjectDNMapping" to="SubjectCNMapping" />
			</filterchain>
		</copy>
		<copy todir="${dir.jbossweb}"
		      file="${dir.config}/server.xml"
		      overwrite="true" />
	</target>



	<!--
	    ============================================================================
	      The following targets do the extra work necessary to compile, package and
	      deploy the resource JAR archive that contains the dynamic login configuration info.
	    ============================================================================
	  -->

	<!-- Packages the Hibernate archive. -->
	<target name="resource-jar">
		<antcall target="g-jar">
			<param name="jar.path" value="${resourcejar.path}" />
			<param name="include.classes"
			       value="**/dynamic-login-config.xml,**/my*.properties" />
		</antcall>
	</target>


	<!-- 
    ============================================================================
      These targets clean up the mess we made.
    ============================================================================
    -->

	<target description="Removes all generated files."
	        name="clean"
	        depends="g-clean" />
	<target description="Removes all generated files, the JBoss AS configuration and the database."
	        name="clean-all"
	        depends="g-clean-all" />

</project>
